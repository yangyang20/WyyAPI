// Code generated by goctl. DO NOT EDIT.
package types

type MsgCommentsReq struct {
	BeforeTime string `form:"beforeTime,default=-1"`
	Limit      int    `form:"limit,default=30"`
	Total      bool   `form:"total,default=true"`
	Uid        int    `form:"uid"`
}

type MsgCommentsReply struct {
	Code     int         `json:"code"`
	Total    int         `json:"total"`
	Comments interface{} `json:"comments"`
	More     bool        `json:"more"`
}

type MsgForwardsReq struct {
	Offset int  `form:"offset,defaylt=0"`
	Limit  int  `form:"limit,default=30"`
	Total  bool `form:"total,default=true"`
}

type MsgForwardsReply struct {
	NewCount int         `json:"newCount"`
	Lasttime int         `json:"lasttime"`
	More     bool        `json:"more"`
	Forwards interface{} `json:"forwards"`
	Code     int         `json:"code"`
}

type MsgNoticesReq struct {
	Limit int    `form:"limit,default=30"`
	Time  string `form:"time,default=-1"`
}

type MsgNoticesReply struct {
	Notices interface{} `json:"notices"`
	More    bool        `json:"more"`
	Code    int         `json:"code"`
}

type MsgPrivateReq struct {
	Offset int  `form:"offset,defaylt=0"`
	Limit  int  `form:"limit,default=30"`
	Total  bool `form:"total,default=true"`
}

type MsgPrivateReply struct {
	Msgs        interface{} `json:"msg"`
	Code        int         `json:"code"`
	More        bool        `json:"more"`
	NewMsgCount int         `json:"newMsgCount"`
}

type MsgPrivateHistoryReq struct {
	UserId int    `form:"userId"`
	Limit  int    `form:"limit,default=30"`
	Time   string `form:"time,default=0"`
	Total  bool   `form:"total,default=true"`
}

type MsgPrivateHistoryReply struct {
	Code     int         `json:"code"`
	IsArtist bool        `json:"isArtist"`
	IsSubed  bool        `json:"isSubed"`
	Hint     string      `json:"hint"`
	More     bool        `json:"more"`
	Msgs     interface{} `json:"msgs"`
}

type MsgRecentcontactReq struct {
}

type MsgRecentcontactReply struct {
	Code int         `json:"code"`
	Data interface{} `json:"data"`
}
