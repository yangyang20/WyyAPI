// Code generated by goctl. DO NOT EDIT.
package types

type MvAllReq struct {
	Area   string `form:"area,default=全部"`
	Type   string `form:"type,default=全部"`
	Order  string `form:"order,default=上升最快"`
	Tags   string `form:"tags,optional"`
	Offset int    `form:"offset,default=0"`
	Total  bool   `form:"total,default=true"`
	Limit  int    `form:"limit,default=30"`
}

type MvAllReply struct {
	Count   int         `json:"count"`
	HasMore bool        `json:"hasMore"`
	Data    interface{} `json:"data"`
	Code    int         `json:"code"`
}

type MvDetailReq struct {
	Id int `form:"id"`
}

type MvDetailReply struct {
	LoadingPic   string      `json:"loadingPic"`
	BufferPic    string      `json:"bufferPic"`
	LoadingPicFS string      `json:"loadingPicFs"`
	BufferPicFS  string      `json:"bufferPicFs"`
	Subed        bool        `json:"subed"`
	Mp           interface{} `json:"mp"`
	Data         interface{} `json:"data"`
	Code         int         `json:"code"`
}

type MvDetailInfoReq struct {
	Threadid string `form:"threadid"`
}

type MvDetailInfoReply struct {
	LikedCount   int  `json:"likedCount"`
	ShareCount   int  `json:"shareCount"`
	CommentCount int  `json:"commentCount"`
	Liked        bool `json:"liked"`
	Code         int  `json:"code"`
}

type MvExclusiveRcmdReq struct {
	Offset int `form:"offset,default=0"`
	Limit  int `form:"limit,default=30"`
}

type MvExclusiveRcmdReply struct {
	Data interface{} `json:"data"`
	More bool        `json:"more"`
	Code int         `json:"code"`
}

type MvFirstReq struct {
	Area  string `form:"area,default=''"`
	Limit int    `form:"limit,default=30"`
	Total bool   `form:"total,default=true"`
}

type MvFirstReply struct {
	Data interface{} `json:"data"`
	Code int         `json:"code"`
}

type MvSubReq struct {
	T     string `form:"t,options=sub,unsub"`
	MvId  int    `form:"mvId"`
	MvIds string `form:"mvIds"`
}

type MvSubReply struct {
}

type MvSublistReq struct {
	Limit  int  `form:"limit,default=25"`
	Offset int  `form:"offset,default=0"`
	Total  bool `form:"total,default=true"`
}

type MvSublistReply struct {
	Code    int         `json:"code"`
	Data    interface{} `json:"data"`
	HasMore bool        `json:"hasMore"`
	Count   int         `json:"count"`
}

type MvUrlReq struct {
	Id int `form:"id"`
	R  int `form:"r,default=1080"`
}

type MvUrlReply struct {
	Code int         `json:"code"`
	Data interface{} `json:"data"`
}
