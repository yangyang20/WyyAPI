// Code generated by goctl. DO NOT EDIT.
package types

type AlbumReq struct {
	Id int `form:"id"`
}

type AlbumReply struct {
	ResourceState bool        `json:"resourceState"`
	Songs         interface{} `json:"songs"`
	Code          int         `json:"code"`
	Album         interface{} `json:"album"`
}

type AlbumDetailReq struct {
	Id int `form:"id"`
}

type AlbumDetailReply struct {
}

type AlbumDetailDynamicReq struct {
	Id int `form:"id"`
}

type AlbumDetailDynamicReply struct {
	OnSale        bool        `json:"onSale"`
	AlbumGameInfo interface{} `json:"albumGameInfo"`
	CommentCount  int         `json:"commentCount"`
	LikedCount    int         `json:"likedCount"`
	ShareCount    int         `json:"shareCount"`
	IsSub         bool        `json:"isSub"`
	SubTime       int         `json:"subTime"`
	SubCount      int         `json:"subCount"`
	Code          int         `json:"code"`
}

type AlbumListReq struct {
	Limit  int    `form:"limit,default=30"`
	Offset int    `form:"offset,default=0"`
	Total  bool   `form:"total,default=true"`
	Area   string `form:"area,options=ALL,ZH,EA,KR,JP,default=ALL"`
	Type   int    `form:"type"`
}

type AlbumListReply struct {
	Products interface{} `json:"products"`
	Code     int         `json:"code"`
}

type AlbumListStyleReq struct {
	Limit  int    `form:"limit,default=10"`
	Offset int    `form:"offset,default=0"`
	Total  bool   `form:"total,default=true"`
	Area   string `form:"area,options=Z_H,E_A,KR,JP,default=Z_H"`
}

type AlbumListStyleReply struct {
	Code          int         `json:"code"`
	HasNextPage   bool        `json:"hasNextPage"`
	AlbumProducts interface{} `json:"albumProducts"`
}

type AlbumNewReq struct {
	Limit  int    `form:"limit,default=30"`
	Offset int    `form:"offset,default=0"`
	Total  bool   `form:"total,default=true"`
	Area   string `form:"area,options=ALL,ZH,EA,KR,JP,default=ALL"`
}

type AlbumNewReply struct {
	Total  int         `json:"total"`
	Albums interface{} `json:"albums"`
	Code   int         `json:"code"`
}

type AlbumNewestReq struct {
}

type AlbumNewestReply struct {
	Code   int         `json:"code"`
	Albums interface{} `json:"albums"`
}

type AlbumSongsaleboardReq struct {
	AlbumType int    `form:"albumType,default=0"`
	Type      string `form:"type,options=daily,week,year,total,default=daily"`
	Year      int    `form:"year,op"`
}

type AlbumSongsaleboardReply struct {
	Products interface{} `json:"products"`
	Code     int         `json:"code"`
}

type AlbumSubReq struct {
	T  string `form:"t,options=sub,unsub"`
	Id int    `form:"id"`
}

type AlbumSubListReq struct {
	Limit  int  `form:"limit,default=25"`
	Offset int  `form:"offset,default=0"`
	Total  bool `form:"total,default=true"`
}
