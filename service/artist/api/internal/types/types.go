// Code generated by goctl. DO NOT EDIT.
package types

type ArtistListReq struct {
	Limit  string `form:"limit,optional,default=30"`
	Offset string `form:"offset,optional,default=0"`
	Type   string `form:"type,optional,default=1"`
	Area   string `form:"area,optional"`
}

type ArtistListReply struct {
	Artists interface{} `json:"artists"`
	More    bool        `json:"more"`
	Code    int         `json:"code"`
}

type ArtistAlbumReq struct {
	Limit  string `form:"limit,optional,default=30"`
	Offset string `form:"offset,optional,default=0"`
	Total  bool   `form:"total,optional,default=true"`
	Id     string `form:"id"`
}

type ArtistAlbumReply struct {
	Artist    interface{} `json:"artist"`
	HotAlbums interface{} `json:"hotAlbums"`
	More      bool        `json:"more"`
	Code      int         `json:"code"`
}

type ArtistDescReq struct {
	Id string `form:"id"`
}

type ArtistDescReply struct {
	Introduction interface{} `json:"introduction"`
	BriefDesc    interface{} `json:"briefDesc"`
	Count        int         `json:"count"`
	TopicData    interface{} `json:"topicData"`
	Code         int         `json:"code"`
}

type ArtistDetailReq struct {
	Id string `form:"id"`
}

type ArtistDetailReply struct {
	Code    int         `json:"code"`
	Message string      `json:"message"`
	Data    interface{} `json:"data"`
}

type ArtistFansReq struct {
	Id     string `form:"id"`
	Limit  string `form:"limit,default=20"`
	Offset string `form:"offset,default=0"`
}

type ArtistFansReply struct {
	Code    int         `json:"code"`
	Message string      `json:"message"`
	Data    interface{} `json:"data"`
}

type ArtistFollowCountReq struct {
	Id string `form:"id"`
}

type ArtistFollowCountReply struct {
	Code    int         `json:"code"`
	Message string      `json:"message"`
	Data    interface{} `json:"data"`
}

type ArtistMvReq struct {
	ArtistId string `form:"artistId"`
	Limit    string `form:"limit"`
	Offset   string `form:"offset"`
	Total    bool   `form:"total,default=true"`
}

type ArtistMvReply struct {
	Mvs     interface{} `json:"mvs"`
	Time    int64       `json:"time"`
	HasMore bool        `json:"hasMore"`
	Code    int         `json:"code"`
}

type ArtistSongsReq struct {
	Id            int    `form:"id"`
	Private_cloud string `form:"private_cloud,default=true"`
	Work_type     int    `form:"work_type,default=1"`
	Order         string `form:"order,default=hot"`
	Offset        string `form:"offset,default=0"`
	Limit         string `form:"limit,default=100"`
}

type ArtistSongsReply struct {
	Songs interface{} `json:"songs"`
	More  bool        `json:"more"`
	Total int         `json:"total"`
	Code  int         `json:"code"`
}

type ArtistSubReq struct {
	T         string `form:"t,options=sub,unsub"`
	ArtistId  string `form:"artistId"`
	ArtistIds string `form:"artistIds"`
}

type ArtistSubListReq struct {
	Limit  string `form:"limit,default=25"`
	Offset string `form:"offset,default=0"`
	Total  bool   `form:"total,default=true"`
}

type ArtistTopSongReq struct {
	Id int `form:"id"`
}

type ArtistTopSongReply struct {
	Code  int         `json:"code"`
	More  bool        `json:"more"`
	Songs interface{} `json:"songs"`
}

type ArtistVideoReq struct {
	ArtistId int `form:"artistId"`
	Size     int `form:"size,default=10"`
	Cursor   int `form:"cursor,default=0"`
	Tap      int `form:"tap,default=0"`
	Order    int `form:"order,default=0"`
}

type ArtistVideoReply struct {
	Code    int         `json:"code"`
	Message string      `json:"message"`
	Data    interface{} `json:"data"`
}
