// Code generated by goctl. DO NOT EDIT.
package types

type PlaylistCatlistReq struct {
}

type PlaylistCatlistReply struct {
	Code       int         `json:"code"`
	All        interface{} `json:"all"`
	Sub        interface{} `json:"sub"`
	Categories interface{} `json:"categories"`
}

type PlaylistCreateReq struct {
	Name    string `form:"name"`
	Privacy string `form:"privacy"`
	Type    string `form:"type,default=NORMAL"`
}

type PlaylistCreateReply struct {
	Code     int         `json:"code"`
	Playlist interface{} `json:"playlist"`
	Id       int         `json:"id"`
}

type PlaylistDeleteReq struct {
	Id string `form:"id"`
}

type PlaylistDeleteReply struct {
	Code    int         `json:"code"`
	Msg     string      `json:"msg"`
	Message string      `json:"message"`
	Data    interface{} `json:"data"`
}

type PlaylistDescUpdateReq struct {
	Id   string `form:"id"`
	Desc string `form:"desc"`
}

type PlaylistDescUpdateReply struct {
}

type PlaylistDetailReq struct {
	Id string `form:"id"`
	N  int    `form:"n,default=100000"`
	S  string `form:"s,default=8"`
}

type PlaylistDetailReply struct {
	Code            int         `json:"code"`
	RelatedVideos   interface{} `json:"relatedVideos"`
	Playlist        interface{} `json:"playlist"`
	Urls            interface{} `json:"urls"`
	Privileges      interface{} `json:"privileges"`
	SharedPrivilege interface{} `json:"sharedPrivilege"`
	ResEntrance     interface{} `json:"resEntrance"`
}

type PlaylistDetailDynamIcReq struct {
	Id string `form:"id"`
	N  int    `form:"n,default=100000"`
	S  string `form:"s,default=8"`
}

type PlaylistDetailDynamIcReply struct {
	Code            int         `json:"code"`
	RelatedVideos   interface{} `json:"relatedVideos"`
	Playlist        interface{} `json:"playlist"`
	Urls            interface{} `json:"urls"`
	Privileges      interface{} `json:"privileges"`
	SharedPrivilege interface{} `json:"sharedPrivilege"`
	ResEntrance     interface{} `json:"resEntrance"`
}

type PlaylistHighqualityTagsReq struct {
}

type PlaylistHighqualityTagsReply struct {
	Tags interface{} `json:"tags"`
	Code int         `json:"code"`
}

type PlaylistHotReply struct {
	Tags interface{} `json:"tags"`
	Code int         `json:"code"`
}

type PlaylistMylikeReq struct {
	Time  string `form:"time,default=-1"`
	Limit string `form:"limit,default=12"`
}

type PlaylistMylikeReply struct {
	Code    int         `json:"code"`
	Data    interface{} `json:"data"`
	Message string      `json:"message"`
}

type PlaylistNameUpdateReq struct {
	Id   string `form:"id"`
	Name string `form:"name"`
}

type PlaylistNameUpdateReply struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

type PlaylistOrderUpdateReq struct {
	Ids string `form:"ids"`
}

type PlaylistOrderUpdateReply struct {
	Code int `json:"code"`
}

type PlaylistPrivacyReq struct {
	Id      int `form:"id"`
	Privack int `form:"privack,default=0"`
}

type PlaylistPrivacyReply struct {
}

type PlaylistSubscribeReq struct {
	T  string `form:"t,options=subscribe,unsubscribe"`
	Id string `form:"id"`
}

type PlaylistSubscribeReply struct {
	Code int `json:"code"`
}

type PlaylistSubscriberSReq struct {
	Id     string `form:"id"`
	Limit  int    `form:"limit,default=20"`
	Offset int    `form:"offset,default=0"`
}

type PlaylistSubscriberSReply struct {
	Total       int         `json:"total"`
	Code        int         `json:"code"`
	More        bool        `json:"more"`
	Subscribers interface{} `json:"subscribers"`
}

type PlaylistTagsUpdateReq struct {
	Id   int    `form:"id"`
	Tags string `form:"tags"`
}

type PlaylistTagsUpdateReqly struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

type PlaylistTrackAddReq struct {
	Id     string `form:"id"`
	Tracks string `form:"tracks"`
}

type PlaylistTrackAddReply struct {
	Msg     string `json:"msg"`
	Code    int    `json:"code"`
	Message string `json:"message"`
}

type PlaylistUpdatePlaycountReq struct {
	Id string `form:"id"`
}

type PlaylistUpdatePlaycountReply struct {
	Code int `json:"code"`
}

type PlaylistVideoRecentReq struct {
}

type PlaylistVideoRecentReply struct {
}
